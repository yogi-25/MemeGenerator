[{"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\index.js":"1","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\app.js":"2","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\App.js":"3","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\Posts.js":"4","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Form\\Form.js":"5","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\Post\\Post.js":"6","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\styles.js":"7","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Form\\styles.js":"8","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\styles.js":"10","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\reducers\\index.js":"11","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\reducers\\posts.js":"12","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\actions\\posts.js":"13","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\api\\index.js":"14"},{"size":742,"mtime":1612524211593,"results":"15","hashOfConfig":"16"},{"size":158,"mtime":1612378167434,"results":"17","hashOfConfig":"16"},{"size":1654,"mtime":1612603320228,"results":"18","hashOfConfig":"16"},{"size":857,"mtime":1612598506527,"results":"19","hashOfConfig":"16"},{"size":2235,"mtime":1612614373636,"results":"20","hashOfConfig":"16"},{"size":1924,"mtime":1612629329234,"results":"21","hashOfConfig":"16"},{"size":367,"mtime":1612425983650,"results":"22","hashOfConfig":"16"},{"size":449,"mtime":1612466626323,"results":"23","hashOfConfig":"16"},{"size":1013,"mtime":1612622067658,"results":"24","hashOfConfig":"16"},{"size":278,"mtime":1612427014193,"results":"25","hashOfConfig":"16"},{"size":114,"mtime":1612605990773,"results":"26","hashOfConfig":"16"},{"size":483,"mtime":1612614165903,"results":"27","hashOfConfig":"16"},{"size":878,"mtime":1612606717908,"results":"28","hashOfConfig":"16"},{"size":445,"mtime":1612606155846,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"12n882w",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\index.js",[],["62","63"],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\app.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\App.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\Post\\Post.js",["64","65","66"],"import React from 'react';\r\nimport { Card,CardActions,CardContent,CardMedia,Button,Typography} from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport useStyles from './styles';\r\nconst Post = ({post,setCurrentId}) => {\r\n   \r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <Card className={classes.card}>\r\n            <p>&nbsp;</p> \r\n            <p>&nbsp;</p> \r\n            <p>&nbsp;</p> \r\n\r\n             <img className={classes.image} src={post.url} alt=\"image\" height=\"auto\" max-width=\"100\"/>\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.name}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}\r\n                </Typography>\r\n                <Typography variant=\"body2\">{post.caption}</Typography>\r\n                \r\n            </div>\r\n            \r\n            <div className={classes.overlay2}>\r\n              <Button \r\n              style={{color:'black'}} \r\n              size=\"small\" \r\n              onClick={() => setCurrentId(post._id)}>\r\n                  <MoreHorizIcon fontSize=\"default\" />\r\n              </Button>\r\n            </div>\r\n              \r\n               <CardActions className={classes.cardActions}>\r\n                   <Button size=\"small\" color=\"primary\" onClick={() => {}}>\r\n                       <ThumbUpAltIcon fontSize=\"small\"/>\r\n                       Like\r\n                       {post.likeCount}\r\n                   </Button>\r\n                   <Button size=\"small\" color=\"primary\" onClick={() => {}}>\r\n                       <DeleteIcon fontSize=\"small\"/>\r\n                       Delete\r\n                   </Button>\r\n               </CardActions>\r\n\r\n        </Card>  \r\n    );\r\n}\r\nexport default Post;","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\styles.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\reducers\\index.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\reducers\\posts.js",["67"],"export default (posts =[] ,action) =>\r\n{\r\n  switch(action.type)\r\n  {\r\n      case 'UPDATE': \r\n           return posts.map( (post) => post._id = action.payload._id ? action.payload : post);\r\n      case 'FETCH_ALL' : \r\n            return action.payload; //action.payload is actual post\r\n      case 'CREATE' :\r\n            return [...posts, action.payload];     \r\n      default :\r\n            return posts;\r\n  }\r\n}\r\n//reduceers is function that accept the state also it accept the action","C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\actions\\posts.js",[],"C:\\Users\\DNYANESHWAR MISAL\\Desktop\\meme_project\\client\\src\\api\\index.js",["68"],"import axios from 'axios'; //use for make api calls\r\nconst url = 'http://localhost:5000/memes';  //its return all the memes currently have in databases\r\nexport const fetchPosts = () => axios.get(url); //to fetch using redux capabilities ,We are using redux to make the application scalable.\r\nexport const createPost = (newPost) => axios.post(url,newPost);\r\nexport const updatePost = (id,updatedPost) => axios.patch('${url}/${id}',updatedPost);\r\n",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":27,"nodeType":"75","messageId":"76","endLine":2,"endColumn":38},{"ruleId":"73","severity":1,"message":"77","line":2,"column":39,"nodeType":"75","messageId":"76","endLine":2,"endColumn":48},{"ruleId":"78","severity":1,"message":"79","line":18,"column":14,"nodeType":"80","endLine":18,"endColumn":103},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","endLine":14,"endColumn":2},{"ruleId":"84","severity":1,"message":"85","line":5,"column":59,"nodeType":"86","messageId":"87","endLine":5,"endColumn":73},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'CardContent' is defined but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]